<?php

namespace App\Http;
/**
 * The Request class handles incoming HTTP requests.
 *
 * @category HTTP
 * @package  App\Http
 * @author   Jeyson UmaÃ±a <umanajeyson1@gmail.com>
 * @license  MIT 
 * @link     https://enlace-a-documentacion-o-repositorio
 */
class Request
{
    protected $segments = [];
    protected $controller;
    protected $method;

    /**
     * Constructor method to initialize the Request object.
     * It extracts URI segments, sets the controller, and method.
     */
    public function __construct()
    {
        $this->segments = explode('/', $_SERVER['REQUEST_URI']);

        $this->setController();
        $this->setMethod();
    }

    /**
     * Sets the controller based on the first URI segment.
     * If no segment is present, it defaults to 'home'.
     * 
     * @return void
     */
    public function setController()
    {
        $this->controller = empty($this->segments[1])
            ? 'home'
            : $this->segments[1];
    }

    /**
     * Sets the method based on the second URI segment.
     * If no segment is present, it defaults to 'index'.
     * 
     * @return void
     */
    public function setMethod()
    {
        $this->method = empty($this->segments[2])
            ? 'index'
            : $this->segments[2];
    }

    /**
     * Get the fully qualified controller class name based on the 
     * controller name provided in the request.
     *
     * @return string The fully qualified controller class name.
     */
    public function getController()
    {
        $controller = ucfirst($this->controller);

        return "App\Http\Controllers\\{$controller}Controller";
    }

    /**
     * Get the HTTP method associated with the request.
     *
     * @return string The HTTP method (e.g., "GET", "POST").
     */
    public function getMethod()
    {
        return $this->method;
    }

    /**
     * Dispatch the request by calling the controller method and 
     * sending the response to the client.
     *
     * @return mixed The response generated by the controller's method.
     */
    public function send()
    {
        $controller = $this->getController();
        $method = $this->method;
        $response = call_user_func([ new $controller, $method]);

        return $response->send();
    }
}